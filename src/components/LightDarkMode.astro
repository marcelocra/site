---
const commonClasses =
  "w-6 h-6 text-[color:rgb(var(--gray))] hover:text-[color:rgb(var(--gray-dark))] stroke-[1.8] hidden";
---

<light-dark-toggle>
  <div class="tooltip tooltip-left flex" data-tip="Prepare for the scream...">
    <button>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        id="sun"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        class={commonClasses}
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M12 3v2.25m6.364.386-1.591 1.591M21 12h-2.25m-.386 6.364-1.591-1.591M12 18.75V21m-4.773-4.227-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0Z"
        ></path>
      </svg>

      <svg
        xmlns="http://www.w3.org/2000/svg"
        id="moon"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
        class={commonClasses}
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="M21.752 15.002A9.72 9.72 0 0 1 18 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 0 0 3 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 0 0 9.002-5.998Z"
        ></path>
      </svg>
    </button>
  </div>
</light-dark-toggle>

<script>
  class LightDarkToggle extends HTMLElement {
    toggle = this.querySelector("button")!;
    audio = new Audio("/WilhelmScream.ogg");
    sun = this.querySelector("#sun")!;
    moon = this.querySelector("#moon")!;
    document = document.documentElement;

    constructor() {
      super();

      console.log(this.audio);
      this.toggle.addEventListener("click", () => this.handleToggleClick());
      this.getOrSetInitialMode();
    }

    getOrSetInitialMode() {
      let theme = "light";

      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        theme = localStorage.getItem("theme")!;
      } else if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        theme = "dark";
      }

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
        this.sun.classList.remove("hidden");
        this.moon.classList.add("hidden");
      } else {
        document.documentElement.classList.add("dark");
        this.sun.classList.add("hidden");
        this.moon.classList.remove("hidden");
      }

      window.localStorage.setItem("theme", theme);
    }

    handleToggleClick() {
      document.documentElement.classList.toggle("dark");

      const isDark = document.documentElement.classList.contains("dark");
      const newTheme = isDark ? "dark" : "light";
      localStorage.setItem("theme", newTheme);

      this.audio.play();
      this.swapIcons();
    }

    swapIcons() {
      this.sun.classList.toggle("hidden");
      this.moon.classList.toggle("hidden");
    }
  }

  customElements.define("light-dark-toggle", LightDarkToggle);
</script>
